version: "3.3"

volumes:
  nginx_conf:
  nginx_vhost:
  nginx_html:

services:
  nginx:
    restart: always
    image: adorofeev/nginx-verbose
    container_name: nginx
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx_conf:/etc/nginx/conf.d
      - nginx_html:/usr/share/nginx/html
      - "./volumes/includes:/etc/nginx/vhost.d:ro"
      - "./volumes/certs:/etc/nginx/certs:ro"
      - "./volumes/htpasswd:/etc/nginx/htpasswd:ro"
    environment:
      - DOCKER_HOST_HOSTNAME=${DOCKER_HOST_HOSTNAME}
    networks:
      - proxy-tier

  nginx-gen:
    restart: always
    image: jwilder/docker-gen
    container_name: nginx-gen
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen"
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./volumes/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
      - nginx_conf:/etc/nginx/conf.d
      - nginx_html:/usr/share/nginx/html
      - "./volumes/includes:/etc/nginx/vhost.d:ro"
      - "./volumes/certs:/etc/nginx/certs:ro"
      - "./volumes/htpasswd:/etc/nginx/htpasswd:ro"
    entrypoint: /bin/sh -c
    command: ["/usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf"]
    networks:
      - proxy-tier

# Run following command to create network, once for each host:
# docker network create -d bridge nginx-proxy
networks:
  proxy-tier:
    external:
      name: nginx-proxy
